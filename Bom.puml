@startuml
'https://plantuml.com/class-diagram

class Admin {
firstName:string
lastName:string
}

enum Currency{
USD
}

class Price{
cost:double
}

interface Product{
getDescription():string
}


class Electronics{
brand:string
model:string
price:Price
}

class GardenTools{
toolType:string
material:string
price:Price
}

class CarParts{
partNumber:string
compatability:string
price:Price
}

class ElectronicsFactory{
createElectronics(ElectronicsDto):Electronics
createElectronicsDto(Electronic):ElectronicsDto
}

class GardenToolsFactory{
createGardenTools(GardenToolsDto):GardenTools
createGardenToolsDto(GardenTools):GardenToolsDto
}

class CarPartsFactory{
createCarParts(CarPartsDto):CarParts
createCarPartsDto(CarParts):CarPartsDto
}

class ElectronicsAdapter{
}

class GardenToolsAdapter{
}

class CarPartsAdapter{
}

class AuctionAnnouncement{
creationDate:Date
description:string
}

class Salesman{
firstName:string
secondName:string
phone:string
}

enum ProductType{
ELECTRONICS,
GARDEN_TOOLS,
CAR_PARTS
}

enum SaleAnnouncementStatus{
PENDING,
APPROVED,
REJECTED
}

class SaleAnnouncement{
saleDate:Date
description:string
interestRate:double
status:boolean
}

interface PricingStrategy{
calculatePrice(double basePrice):double
}

class RegularPricingStrategy{
}

class DiscountPricingStrategy {
discount:double
}


Admin --o AuctionAnnouncement
Product --o AuctionAnnouncement
Currency --o Price
Price --o Electronics
Price --o GardenTools
Price --o CarParts
Salesman --o SaleAnnouncement
Product --o SaleAnnouncement
Electronics --o ElectronicsAdapter
ElectronicsAdapter ..|> Product
GardenTools --o GardenToolsAdapter
GardenToolsAdapter ..|> Product
CarParts --o CarPartsAdapter
CarPartsAdapter ..|> Product
ProductType --o SaleAnnouncement
SaleAnnouncementStatus --o SaleAnnouncement
RegularPricingStrategy ..|> PricingStrategy
DiscountPricingStrategy ..|> PricingStrategy
PricingStrategy--o Electronics
PricingStrategy--o GardenTools
PricingStrategy--o CarParts
ProductType--o AuctionAnnouncement
@enduml
